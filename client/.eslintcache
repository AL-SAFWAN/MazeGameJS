[{"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\react-three\\src\\Components\\Menu.js":"1","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\index.js":"2","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\App.js":"3","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Game.js":"4","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Store.js":"5","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Player.js":"6","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Maze.js":"7","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Menu.js":"8","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Enemy.js":"9","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Treasure.js":"10","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Coins.js":"11","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Room.js":"12","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Passage.js":"13","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Fps.js":"14","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\index.js":"15","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\App.js":"16","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Game.js":"17","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Store.js":"18","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Fps.js":"19","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Menu.js":"20","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Maze.js":"21","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Player.js":"22","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Coins.js":"23","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Room.js":"24","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Passage.js":"25","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Treasure.js":"26","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Enemy.js":"27"},{"size":8118,"mtime":1612778492981,"results":"28","hashOfConfig":"29"},{"size":523,"mtime":1611674613412,"results":"30","hashOfConfig":"31"},{"size":988,"mtime":1612942212379,"results":"32","hashOfConfig":"31"},{"size":3859,"mtime":1612939949819,"results":"33","hashOfConfig":"31"},{"size":4069,"mtime":1612942210076,"results":"34","hashOfConfig":"31"},{"size":4856,"mtime":1612942372665,"results":"35","hashOfConfig":"31"},{"size":1716,"mtime":1612938667709,"results":"36","hashOfConfig":"31"},{"size":13194,"mtime":1612940827160,"results":"37","hashOfConfig":"31"},{"size":2260,"mtime":1612942448694,"results":"38","hashOfConfig":"31"},{"size":2209,"mtime":1612940450755,"results":"39","hashOfConfig":"31"},{"size":1817,"mtime":1612940342978,"results":"40","hashOfConfig":"31"},{"size":6661,"mtime":1612940550861,"results":"41","hashOfConfig":"31"},{"size":12956,"mtime":1612940757449,"results":"42","hashOfConfig":"31"},{"size":1270,"mtime":1612908687585,"results":"43","hashOfConfig":"31"},{"size":523,"mtime":1612511675000,"results":"44","hashOfConfig":"45"},{"size":988,"mtime":1612443342000,"results":"46","hashOfConfig":"45"},{"size":3859,"mtime":1612443342000,"results":"47","hashOfConfig":"45"},{"size":4069,"mtime":1612511675000,"results":"48","hashOfConfig":"45"},{"size":1270,"mtime":1612367944000,"results":"49","hashOfConfig":"45"},{"size":13194,"mtime":1612367944000,"results":"50","hashOfConfig":"45"},{"size":1716,"mtime":1612367944000,"results":"51","hashOfConfig":"45"},{"size":4856,"mtime":1612367944000,"results":"52","hashOfConfig":"45"},{"size":1817,"mtime":1612367944000,"results":"53","hashOfConfig":"45"},{"size":6661,"mtime":1612367944000,"results":"54","hashOfConfig":"45"},{"size":12956,"mtime":1612367944000,"results":"55","hashOfConfig":"45"},{"size":2209,"mtime":1612367944000,"results":"56","hashOfConfig":"45"},{"size":2260,"mtime":1612367944000,"results":"57","hashOfConfig":"45"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1rnhy5q",{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"hj7mwm",{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"fhrw4a",{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"91"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"91"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"91"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"91"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\react-three\\src\\Components\\Menu.js",["124","125","126","127"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\index.js",[],["128","129"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\App.js",["130"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Game.js",["131","132"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Store.js",["133"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Player.js",["134"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Maze.js",[],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Menu.js",["135","136"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Enemy.js",[],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Treasure.js",["137"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Coins.js",["138"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Room.js",["139","140","141","142","143","144","145","146","147"],"C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Passage.js",["148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164"],"import React from 'react'\r\nimport { useBox } from 'use-cannon'\r\nimport { api } from '../Store'\r\n\r\n// a passage is made up of 3 walls\r\nconst Wall = (props) => {\r\n    const { rotation, position, size, color } = props\r\n    const [ref] = useBox(() => ({ mass: 100, type: \"Static\", rotation, position, args: size }))\r\n    return (\r\n        <mesh ref={ref}>\r\n            <boxBufferGeometry attach=\"geometry\" args={size} />\r\n            <meshStandardMaterial color={\"lightblue\"} />\r\n        </mesh>\r\n    )\r\n}\r\n\r\nconst verticalPassageFromDoor = (door, size, room) => {\r\n    if (door === 'N') {\r\n        const length = 200 + (size / 2)\r\n        return verticalPassage(room, length, size)\r\n    }\r\n    if (door === 'S') {\r\n        const length = -200 - (size / 2)\r\n        return verticalPassage(room, length, size)\r\n    }\r\n}\r\n\r\nconst horizontalPassageFromDoor = (door, size, room) => {\r\n    if (door === 'E') {\r\n        const length = -200 - (size / 2)\r\n        return horizontalPassage({ x: room.x, z: room.z }, length, size)\r\n    }\r\n    if (door === 'W') {\r\n        const length = 200 + (size / 2)\r\n        return horizontalPassage({ x: room.x, z: room.z }, length, size)\r\n    }\r\n}\r\n\r\n\r\nconst verticalPassage = (position, length, size) => {\r\n    return (<>\r\n        <Wall rotation={[0, 0, 0]} position={[35 + position.x, 35, position.z - length]} size={[20, 70, size]} />\r\n        <Wall rotation={[0, 0, 0]} position={[-35 + position.x, 35, position.z - length]} size={[20, 70, size]} />\r\n        <Wall rotation={[0, 0, 0]} position={[0 + position.x, 80, position.z - length]} size={[90, 20, size]} />\r\n    </>)\r\n}\r\n\r\nconst horizontalPassage = (position, length, size) => {\r\n    return (<>\r\n        <Wall rotation={[0, 0, 0]} position={[position.x - length, 35, 35 + position.z]} size={[size, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[position.x - length, 35, -35 + position.z]} size={[size, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[position.x - length, 80, 0 + position.z]} size={[size, 20, 90]} />\r\n    </>)\r\n}\r\n\r\n\r\n// corner connector \r\nconst RightTopCorner = (x, z) => {\r\n    return <>\r\n        <Wall rotation={[0, 0, 0]} position={[35 + x, 35, 0 + z]} size={[20, 70, 50]} />\r\n        <Wall rotation={[0, 0, 0]} position={[10 + x, 35, -35 + z]} size={[70, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[10 + x, 80, -10 + z]} size={[70, 20, 70]} />\r\n    </>\r\n}\r\nconst LeftTopCorner = (x, z) => {\r\n    return <>\r\n        <Wall rotation={[0, 0, 0]} position={[-35 + x, 35, 0 + z]} size={[20, 70, 50]} />\r\n        <Wall rotation={[0, 0, 0]} position={[-10 + x, 35, -35 + z]} size={[70, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[-10 + x, 80, -10 + z]} size={[70, 20, 70]} /></>\r\n}\r\nconst LeftBottomCorner = (x, z) => {\r\n    return <>\r\n        <Wall rotation={[0, 0, 0]} position={[-35 + x, 35, 0 + z]} size={[20, 70, 50]} />\r\n        <Wall rotation={[0, 0, 0]} position={[-10 + x, 35, 35 + z]} size={[70, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[-10 + x, 80, 10 + z]} size={[70, 20, 70]} /></>\r\n}\r\nconst RightBottomCorner = (x, z) => {\r\n    return <>\r\n        <Wall rotation={[0, 0, 0]} position={[35 + x, 35, 0 + z]} size={[20, 70, 50]} />\r\n        <Wall rotation={[0, 0, 0]} position={[10 + x, 35, 35 + z]} size={[70, 70, 20]} />\r\n        <Wall rotation={[0, 0, 0]} position={[10 + x, 80, 10 + z]} size={[70, 20, 70]} /></>\r\n}\r\n\r\n\r\n\r\nconst selfConnectNE = (room) => {\r\n    return <>\r\n        {horizontalPassage({ x: 25 + room.x, z: -270 - 55 + room.z }, -275 / 2, 275)}\r\n        {RightTopCorner(270 + 55 + room.x, -270 - 55 + room.z)}\r\n        {LeftTopCorner(room.x, -270 - 55 + room.z)}\r\n\r\n        {RightBottomCorner(270 + 55 + room.x, room.z)}\r\n\r\n        {verticalPassage({ x: 270 + 55 + room.x, z: -25 + room.z }, 275 / 2, 275)}\r\n        {horizontalPassageFromDoor('E', 100, room)}\r\n        {verticalPassageFromDoor(\"N\", 100, room)}\r\n    </>\r\n\r\n}\r\nconst selfConnectES = (room) => {\r\n    return <>\r\n        {verticalPassageFromDoor(\"S\", 100, room)}\r\n        {horizontalPassage({ x: 25 + room.x, z: 270 + 55 + room.z }, -275 / 2, 275)}\r\n        {LeftBottomCorner(room.x, 270 + 55 + room.z)}\r\n\r\n        {RightBottomCorner(270 + 55 + room.x, 270 + 55 + room.z)}\r\n\r\n        {horizontalPassageFromDoor('E', 100, room)}\r\n        {RightTopCorner(270 + 55 + room.x, room.z)}\r\n        {verticalPassage({ x: 270 + 55 + room.x, z: 25 + room.z }, -275 / 2, 275)}\r\n    </>\r\n}\r\nconst selfConnectSW = (room) => {\r\n    return <>\r\n\r\n        {verticalPassageFromDoor(\"S\", 100, room)}\r\n        {horizontalPassage({ x: -25 + room.x, z: 270 + 55 + room.z }, 275 / 2, 275)}\r\n        {RightBottomCorner(room.x, 270 + 55 + room.z)}\r\n\r\n        {LeftBottomCorner(-270 - 55 + room.x, 270 + 55 + room.z)}\r\n\r\n        {horizontalPassageFromDoor('W', 100, room)}\r\n        {LeftTopCorner(-270 - 55 + room.x, room.z)}\r\n        {verticalPassage({ x: -270 - 55 + room.x, z: 25 + room.z }, -275 / 2, 275)}\r\n\r\n    </>\r\n}\r\n\r\nconst selfConnectWN = (room) => {\r\n    return <>\r\n        {verticalPassageFromDoor(\"N\", 100, room)}\r\n        {horizontalPassage({ x: -25 + room.x, z: -270 - 55 + room.z }, 275 / 2, 275)}\r\n        {RightTopCorner(room.x, -270 - 55 + room.z)}\r\n\r\n        {LeftTopCorner(-270 - 55 + room.x, -270 - 55 + room.z)}\r\n\r\n        {horizontalPassageFromDoor('W', 100, room)}\r\n        {LeftBottomCorner(-270 - 55 + room.x, room.z)}\r\n        {verticalPassage({ x: -270 - 55 + room.x, z: -25 + room.z }, 275 / 2, 275)}\r\n\r\n    </>\r\n}\r\n\r\nexport default function Passage(room1, room2, room1Door, room2Door) {\r\n    this.room1 = room1\r\n    this.room2 = room2\r\n    this.room1Door = room1Door\r\n    this.room2Door = room2Door\r\n}\r\n\r\nPassage.prototype.proxyCreatePassage = function (room1, room2, room1Door, room2Door) {\r\n    new Passage(room1, room2, room1Door, room2Door).createPassage()\r\n\r\n}\r\nPassage.prototype.proxyCreateDirectPassage = function (room1, room2, door) {\r\n    new Passage(room1, room2, null, null).directConnect(door)\r\n}\r\nPassage.prototype.createPassage = function () {\r\n    const deltaX = this.room2.x - this.room1.x\r\n    const deltaZ = this.room2.z - this.room1.z\r\n    // if diagonal \r\n    if (deltaX > 0 && deltaZ > 0) {\r\n        if (this.room1Door === \"S\" && this.room2Door === \"W\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"S\", Math.abs(deltaZ) - 200 - 25, this.room1)}\r\n                {LeftBottomCorner(this.room1.x, this.room2.z)}\r\n                {horizontalPassageFromDoor(\"W\", Math.abs(deltaX) - 200 - 25, this.room2)}\r\n            </React.Fragment>)\r\n        }\r\n        if (this.room1Door === \"E\" && this.room2Door === \"N\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"N\", Math.abs(deltaZ) - 200 - 25, this.room2)}\r\n                {RightTopCorner(this.room2.x, this.room1.z)}\r\n                {horizontalPassageFromDoor(\"E\", Math.abs(deltaX) - 200 - 25, this.room1)}\r\n            </React.Fragment>)\r\n        }\r\n    }\r\n    if (deltaX > 0 && deltaZ < 0) {\r\n        if (this.room1Door === \"N\" && this.room2Door === \"W\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"N\", Math.abs(deltaZ) - 200 - 25, this.room1)}\r\n                {LeftTopCorner(this.room1.x, this.room2.z)}\r\n                {horizontalPassageFromDoor(\"W\", Math.abs(deltaX) - 200 - 25, this.room2)}\r\n            </React.Fragment>)\r\n        }\r\n        if (this.room1Door === \"E\" && this.room2Door === \"S\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"S\", Math.abs(deltaZ) - 200 - 25, this.room2)}\r\n                {RightBottomCorner(this.room2.x, this.room1.z)}\r\n                {horizontalPassageFromDoor(\"E\", Math.abs(deltaX) - 200 - 25, this.room1)}\r\n            </React.Fragment>)\r\n        }\r\n    } else { console.log(\"Room position error \") }\r\n    if (deltaX < 0 && deltaZ < 0) {\r\n        if (this.room1Door === \"N\" && this.room2Door === \"E\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"N\", Math.abs(deltaZ) - 200 - 25, this.room1)}\r\n                {RightTopCorner(this.room1.x, this.room2.z)}\r\n                {horizontalPassageFromDoor(\"E\", Math.abs(deltaX) - 200 - 25, this.room2)}\r\n            </React.Fragment>)\r\n        }\r\n        if (this.room1Door === \"W\" && this.room2Door === \"S\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"S\", Math.abs(deltaZ) - 200 - 25, this.room2)}\r\n                {LeftBottomCorner(this.room2.x, this.room1.z)}\r\n                {horizontalPassageFromDoor(\"W\", Math.abs(deltaX) - 200 - 25, this.room1)}\r\n            </React.Fragment>)\r\n        }\r\n    } else { console.log(\"Room position error \") }\r\n    if (deltaX < 0 && deltaZ > 0) {\r\n        if (this.room1Door === \"W\" && this.room2Door === \"N\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"N\", Math.abs(deltaZ) - 200 - 25, this.room2)}\r\n                {LeftTopCorner(this.room2.x, this.room1.z)}\r\n                {horizontalPassageFromDoor(\"W\", Math.abs(deltaX) - 200 - 25, this.room1)}\r\n            </React.Fragment>)\r\n        }\r\n        if (this.room1Door === \"S\" && this.room2Door === \"E\") {\r\n            api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n                {/* this is for the inner connectors  */}\r\n                {verticalPassageFromDoor(\"S\", Math.abs(deltaZ) - 200 - 25, this.room1)}\r\n                {RightBottomCorner(this.room1.x, this.room2.z)}\r\n                {horizontalPassageFromDoor(\"E\", Math.abs(deltaX) - 200 - 25, this.room2)}\r\n            </React.Fragment>)\r\n        }\r\n    } else { console.log(\"Room position error \") }\r\n\r\n}\r\n\r\nPassage.prototype.directConnect = function (door) {\r\n    // NE EN\r\n    const deltaX = this.room2.x - this.room1.x\r\n    const deltaZ = this.room2.z - this.room1.z\r\n\r\n    if (deltaX === 0 && deltaZ < 0 && door === 'N') {\r\n        console.log(\"going north\")\r\n        api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n            {verticalPassageFromDoor(\"N\", Math.abs(deltaZ) - 400, this.room1)}\r\n        </React.Fragment>)\r\n    }\r\n    if (deltaX === 0 && deltaZ > 0 && door === 'S') {\r\n        console.log(\"going south\")\r\n        api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n            {verticalPassageFromDoor(\"S\", Math.abs(deltaZ) - 400, this.room1)}\r\n        </React.Fragment>)\r\n    }\r\n    if (deltaZ === 0 && deltaX < 0 && door === 'W') {\r\n        console.log(\"going west\")\r\n        api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2.name + this.room2Door}>\r\n            {horizontalPassageFromDoor(\"W\", Math.abs(deltaX) - 400, this.room1)}\r\n        </React.Fragment>)\r\n    }\r\n    if (deltaZ === 0 && deltaX > 0 && door === 'E') {\r\n        console.log(\"going east\")\r\n        api.getState().addPassage(<React.Fragment key={this.room1.name + this.room1Door + this.room2Door}>\r\n            {horizontalPassageFromDoor(\"E\", Math.abs(deltaX) - 400, this.room1)}\r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\n\r\nPassage.prototype.selfConnect = function (room, d1, d2) {\r\n    // NE EN\r\n    if (d1 === 'N' && d2 === \"E\" || d1 === 'E' && d2 === \"N\") {\r\n        api.getState().addPassage(\r\n            selfConnectNE(room))\r\n    }\r\n    // ES SE\r\n    if (d1 === 'E' && d2 === 'S' || d1 === 'S' && d2 === 'W') {\r\n        api.getState().addPassage(\r\n            selfConnectES(room))\r\n    }\r\n    // SW WS\r\n    if (d1 === 'S' && d2 === \"W\" || d1 === 'W' && d2 === \"S\") {\r\n        api.getState().addPassage(\r\n            selfConnectSW(room))\r\n    }\r\n    //WN NW\r\n    if (d1 === 'W' && d2 === 'N' || d1 === 'N' && d2 === 'W') {\r\n        api.getState().addPassage(\r\n            selfConnectWN(room))\r\n    }\r\n}\r\n\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\Threejs\\App\\client\\src\\Components\\Fps.js",["165"],"import React, { useRef, useEffect } from 'react'\r\nimport { addEffect, addTail } from 'react-three-fiber'\r\n\r\nexport default function Fps() {\r\n    let ref = useRef()\r\n    useEffect(() => {\r\n        let decimalPlacesRatio = Math.pow(10, 0)\r\n        let timeMeasurements = []\r\n        let fps = 0\r\n        let last = -1\r\n        let msPassed = 0\r\n        // addEffect is like a global useFrame, it runs every time r3f renders\r\n        const unsub1 = addEffect(() => {\r\n            timeMeasurements.push(performance.now())\r\n            msPassed = timeMeasurements[timeMeasurements.length - 1] - timeMeasurements[0]\r\n            if (msPassed >= 0.25 * 1000) {\r\n                fps = Math.round((timeMeasurements.length / msPassed) * 1000 * decimalPlacesRatio) / decimalPlacesRatio\r\n                timeMeasurements = []\r\n            }\r\n            if (fps !== last) ref.current.innerText = 'fps ' + fps\r\n            last = fps\r\n        })\r\n        // addTail is another global effect that is called once rendering stops\r\n        const unsub2 = addTail(() => (ref.current.innerText = 'fps 0'))\r\n        return () => (unsub1(), unsub2())\r\n    }, [])\r\n    return <div className=\"fps\" ref={ref} style={{ position: 'absolute',  top: '15px', left: '15px', width: '300px'}} />\r\n}\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\index.js",[],["166","167"],"C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\App.js",["168"],"\r\nimport React, {  useState, useEffect } from 'react'\r\nimport { loadRoom } from './Components/Maze'\r\nimport  { api } from './Store'\r\nimport './index.css';\r\nimport Menu from './Components/Menu'\r\nimport Game from './Game'\r\nimport axios from 'axios'\r\nimport Fps from './Components/Fps'\r\n\r\n\r\nfunction App() {\r\n  const { setAllUsers,setConfig } = api.getState(state => state)\r\n\r\n  const [inMenu, setInMenu] = useState(false)\r\n\r\n  useEffect(() => {\r\n    loadRoom()\r\n    // this will get the information\r\n    axios.get('/api/users').then((res, req) => {\r\n      let data = JSON.parse(res.data)\r\n      console.log(data)\r\n      setAllUsers(data)\r\n    })\r\n    axios.get('/api/game').then((res, req) => {\r\n      let data = JSON.parse(res.data)\r\n      console.log(data)\r\n      setConfig(data)\r\n    })\r\n  }, [setAllUsers])\r\n\r\n\r\n  return (\r\n    <>\r\n      {inMenu && <Game inMenu={inMenu} />}\r\n      <Menu inMenu={inMenu} setInMenu={setInMenu} />\r\n      <Fps />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Game.js",["169","170"],"\r\nimport React, { useRef, useState, useEffect, Suspense } from 'react'\r\nimport { Canvas, useFrame, useThree, extend } from 'react-three-fiber'\r\nimport { Physics, usePlane } from 'use-cannon'\r\nimport * as THREE from \"three\"\r\nimport Player from './Components/Player'\r\nimport { PointerLockControls } from \"@react-three/drei\"\r\nimport { loadRoom } from './Components/Maze'\r\nimport useStore, { api } from './Store'\r\nimport Coins from './Components/Coins'\r\nimport './index.css';\r\n\r\nextend({ PointerLockControls })\r\n\r\nconst Ground = ({ x, z }) => {\r\n  const [ref] = usePlane(() => ({ type: \"Static\", position: [0, 0, 0], rotation: [-Math.PI / 2, 0, 0], args: [x, z] }))\r\n  return (\r\n    <mesh ref={ref} receiveShadow>\r\n      <planeBufferGeometry attach=\"geometry\" args={[x, z]} />\r\n      <meshStandardMaterial color={'orange'} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\nconst Passages = () => {\r\n  const { passage } = api.getState(state => state)\r\n\r\n  return (\r\n    <>{passage}</>\r\n  )\r\n}\r\nfunction Laser() {\r\n  const { Enemy, setEnemy, openDoors } = api.getState(state => state)\r\n  const { position, positionE } = api.getState(state => state)\r\n  const { camera } = useThree()\r\n  const d = useRef()\r\n  const refBullet = useRef()\r\n  useEffect(() => {\r\n    refBullet.current.position.set(position.x, 21, position.z)\r\n    d.current = new THREE.Vector3().copy(camera.getWorldDirection(new THREE.Vector3())).multiply(new THREE.Vector3(5, 5, 5))\r\n  }, [])\r\n\r\n  useFrame((state) => {\r\n    refBullet.current.position.add(d.current)\r\n    if (Enemy.length === 1) {\r\n      const bulletPos = refBullet.current.position\r\n      const deltaX = positionE.x - bulletPos.x\r\n      const deltaZ = positionE.z - bulletPos.z\r\n      let distance = Math.sqrt((deltaX * deltaX) + (deltaZ * deltaZ))\r\n      if (distance < 10) {\r\n        Enemy.pop()\r\n        console.log(\"hit\", Enemy)\r\n        setEnemy(Enemy)\r\n        openDoors()\r\n      }\r\n    }\r\n  })\r\n  return (\r\n    <>\r\n      <mesh ref={refBullet} >\r\n        <sphereBufferGeometry args={[0.5, 8, 8]} />\r\n        <meshStandardMaterial color={'white'} />\r\n      </mesh>\r\n    </>\r\n  )\r\n}\r\n\r\nconst Lasers = () => {\r\n  const [lasers, setLasers] = useState()\r\n  useFrame(() => {\r\n    setLasers(api.getState().lasers.map(item => <Laser key={item} />))\r\n  })\r\n  return (\r\n    <>\r\n      {lasers}\r\n    </>\r\n  )\r\n\r\n}\r\n\r\nconst Enemy = () => {\r\n  const [Enemy, setEnemy] = useState()\r\n  useFrame(() => {\r\n    setEnemy(api.getState().Enemy.map(e => e))\r\n  })\r\n  return (\r\n    <>\r\n      {Enemy}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Treasure = () => {\r\n  const { treasure } = useStore()\r\n  return (\r\n    <>{\r\n      treasure.map(e => e)}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Coin() {\r\n  const [coins, setCoins] = useState()\r\n  useFrame(() => {\r\n    setCoins(api.getState(state => state.coins).coins.map(item => new Coins().makeCoin(item.p, item.id)))\r\n  })\r\n  return (\r\n    <>\r\n      {coins}\r\n    </>\r\n  )\r\n}\r\n\r\nconst Rooms = () => {\r\n  const { rooms } = api.getState()\r\n  return rooms.map(room => room.create())\r\n}\r\n\r\nconst Update = () => {\r\n  const { points, actions } = useStore()\r\n  useEffect(() => {\r\n    actions.updateCurrentUser()\r\n  }, [points])\r\n  return <></>\r\n}\r\n\r\nfunction Game({ inMenu }) {\r\n  console.log('is the game here')\r\n  return (\r\n    <>\r\n      <Canvas invalidateFrameloop shadowMap\r\n        onCreated={() => {\r\n          loadRoom()\r\n        }}\r\n      >\r\n        <Update />\r\n        <ambientLight intensity={.1} />\r\n\r\n        <Physics gravity={[0, -400, 0]} >\r\n          <Suspense fallback={null}>\r\n            <Treasure />\r\n            <Coin />\r\n            <Enemy />\r\n            <Lasers />\r\n            <Player></Player>\r\n            <Rooms />\r\n            <Passages />\r\n            <Ground x={10000} z={10000} />\r\n          </Suspense>\r\n        </Physics>\r\n\r\n        {inMenu && <PointerLockControls />}\r\n      </Canvas>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Store.js",["171"],"import * as THREE from 'three'\r\nimport create from 'zustand'\r\nimport axios from 'axios'\r\n\r\n\r\nconst [useStore, api] = create((set, get) => {\r\n  let cancelLaserTO = undefined\r\n  return {\r\n    username: '',\r\n    setName: (username) => set({ username }),\r\n    step: 0,\r\n    setSteps: (step) => set({ step }),\r\n    difficulty: 'Normal',\r\n    setDifficulty: (difficulty) => set({ difficulty }),\r\n    config:{\"Normal\" :0},\r\n    setConfig:(config) => set({ config }),\r\n\r\n    position: new THREE.Vector3(0, 0, 0),\r\n    setPosition: (position) => set({ position }),\r\n\r\n    load: true,\r\n    startPosition: new THREE.Vector3(0, 0, 0),\r\n    setStartPosition: (startPosition) => set({ startPosition, load: false }),\r\n\r\n    rotation: new THREE.Euler(0, 0, 0),\r\n    setRotation: (rotation) => set({ rotation }),\r\n\r\n    positionE: new THREE.Vector3(0, 0, 0),\r\n    setPositionE: (positionE) => set({ positionE }),\r\n\r\n    lasers: [],\r\n\r\n    rooms: [],\r\n    setRoom: (rooms) => set({ rooms }),\r\n    passage: [],\r\n    addPassage: (p) => set(get().passage.push(p)),\r\n\r\n\r\n    Enemy: [],\r\n    setEnemy: (Enemy) =>{ set({ Enemy })},\r\n    addEnemy: (e) => set(get().Enemy.push(e)),\r\n    enemyCreateIn: [],\r\n    addEnemyCreateIn: (e) => set(get().enemyCreateIn.push(e)),\r\n\r\n    points: 0,\r\n\r\n    treasure: [],\r\n    setTreasure: (treasure) => set({ treasure }),\r\n    addTreasure: (e) => {\r\n      set(get().treasure.push(e))\r\n    },\r\n    treasureCreatedIn: [],\r\n    addTreasureCreatedIn: (e) => set(get().treasureCreatedIn.push(e)),\r\n    treasurePickUp: [],\r\n    addTreasurePickUp: (e) => {\r\n      set({ points: get().points + 100 })\r\n      set(get().treasurePickUp.push(e))\r\n    },\r\n\r\n    coins: [],\r\n    setCoin: (coins) => set({ coins }),\r\n    addCoin: (e) => {\r\n      set({ points: get().points - 20 })\r\n      set(get().coins.push(e))\r\n    },\r\n    removeCoin: (e) => {\r\n      set({ points: get().points + 20 })\r\n      set({ coins: get().coins.filter(c => { return c.id != e }) })\r\n    },\r\n\r\n    doorsOpened: true,\r\n    closeDoors: () => set({ doorsOpened: false }),\r\n    openDoors: () => set({ doorsOpened: true }),\r\n\r\n    drop: false,\r\n    pickUp: false,\r\n    setDrop: (b) => set({ drop: b }),\r\n    setPickUp: (b) => set({ pickUp: b }),\r\n\r\n    allUsers: {},\r\n    setAllUsers: (allUsers) => set({ allUsers }),\r\n\r\n    setUserData: (user) => {\r\n      set({\r\n        username: user.username,\r\n        position: user.position,\r\n        coins: user.coins,\r\n        enemyCreateIn: user.enemyCreateIn,\r\n        treasureCreatedIn: user.treasureCreatedIn,\r\n        treasure: user.treasure,\r\n        points: user.points,\r\n      })\r\n    },\r\n    getUserData: () => {\r\n      const {\r\n        username,\r\n        position,\r\n        coins,\r\n        enemyCreateIn,\r\n        treasureCreatedIn,\r\n        treasure,\r\n        points } = get()\r\n\r\n      return {\r\n        username,\r\n        position,\r\n        coins,\r\n        enemyCreateIn,\r\n        treasureCreatedIn,\r\n        treasure,\r\n        points\r\n      }\r\n    },\r\n    reset: () => {\r\n\r\n      set({\r\n        coins: [],\r\n        enemyCreateIn: [],\r\n        treasureCreatedIn: [],\r\n        // treasure: [],\r\n        // points: 0,\r\n      })\r\n    },\r\n\r\n    actions: {\r\n      shoot() {\r\n        set(state => ({ lasers: [...state.lasers, Date.now()] }))\r\n        clearTimeout(cancelLaserTO)\r\n        cancelLaserTO = setTimeout(() => set(state => ({ lasers: state.lasers.filter(t => Date.now() - t <= 500) })), 500)\r\n        console.log(\"shoot is preformed at \", get().position)\r\n      },\r\n\r\n      updateCurrentUser: () => {\r\n        const {\r\n          username,\r\n          position,\r\n          coins,\r\n          enemyCreateIn,\r\n          treasureCreatedIn,\r\n          treasure,\r\n          points,\r\n          allUsers } = get()\r\n\r\n        allUsers[username] = {\r\n          username,\r\n          coins,\r\n          position,\r\n          enemyCreateIn,\r\n          treasureCreatedIn,\r\n          treasure,\r\n          points\r\n        }\r\n\r\n        axios.post(`api/users/${JSON.stringify(allUsers)}`)\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n})\r\n\r\nexport default useStore\r\n\r\nexport { api }\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Fps.js",["172"],"C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Menu.js",["173","174"],"import React from 'react'\r\nimport { Chip, Grid, Button, Paper, FormControl, RadioGroup, FormControlLabel, Radio, MenuItem } from '@material-ui/core';\r\nimport * as THREE from \"three\"\r\nimport useStore, { api } from '../Store'\r\nimport axios from 'axios'\r\nimport './menu.css'\r\nimport {\r\n\r\n    TextField,\r\n    Typography,\r\n\r\n} from \"@material-ui/core\";\r\n\r\nexport default function Menu({ setInMenu }) {\r\n    const { points, username, setName, step, setSteps, setDifficulty, difficulty, reset, allUsers, setUserData } = useStore()\r\n    setInMenu(false)\r\n    switch (step) {\r\n        case 0:\r\n            return <OnLoad step={step} setSteps={setSteps} />\r\n\r\n        case 1:\r\n            return <NewGame step={step} setSteps={setSteps} setName={setName} username={username} reset={reset} />\r\n        case 2:\r\n            return <Options step={step} setSteps={setSteps} setDifficulty={setDifficulty} difficulty={difficulty} />\r\n        case 3:\r\n            return <>\r\n                <InGame points={points} username={username} difficulty={difficulty} setSteps={setSteps} setInMenu={setInMenu}></InGame>\r\n            </>\r\n        case 5:\r\n            return <>\r\n                <LoadOldGame setUserData={setUserData} points={points} allUsers={allUsers} difficulty={difficulty} setSteps={setSteps} setInMenu={setInMenu} reset={reset} />\r\n            </>\r\n        case 6:\r\n            return <>\r\n                <Dead setUserData={setUserData} points={points} allUsers={allUsers} difficulty={difficulty} setSteps={setSteps} setInMenu={setInMenu} reset={reset} />\r\n            </>\r\n        default:\r\n            return <OnLoad step={step} setSteps={setSteps} />\r\n    }\r\n}\r\n\r\nconst Dead = ({ points = 0, reset, setInMenu, setSteps }) => {\r\n    setInMenu(false)\r\n    return (<>\r\n        <div id={'center'} style={{ position: \"absolute\", margin: 'auto' }}>\r\n            <Paper\r\n                id={'list'}\r\n                style={{\r\n                    margin: \"auto\",\r\n                    height: 450,\r\n                    width: 800,\r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    top: \"50%\"\r\n                }}\r\n                elevation={3}\r\n            >\r\n                <h1> Total Score :{points}/400 </h1>\r\n            </Paper>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst LoadOldGame = ({ setSteps, allUsers, reset, setUserData }) => {\r\n    console.log(allUsers)\r\n    const [name, setName] = React.useState('');\r\n    const username = Object.keys(allUsers)\r\n    const handleChange = (event) => {\r\n        setName(event.target.value);\r\n        allUsers[event.target.value].username = event.target.value\r\n        setUserData(allUsers[event.target.value])\r\n    };\r\n\r\n    return (<>\r\n        <div id={'center'} style={{ position: \"absolute\", margin: 'auto' }}>\r\n            <Paper\r\n\r\n                id={'list'}\r\n                style={{\r\n                    margin: \"auto\",\r\n                    height: 450,\r\n                    width: 800,\r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    top: \"50%\"\r\n                }}\r\n                elevation={3}\r\n            >\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    style={{ paddingTop: 0 }}\r\n                >\r\n                    Load an old game\r\n            </Typography>\r\n                <form noValidate autoComplete=\"off\" style={{ margin: '50px' }}>\r\n                    <TextField\r\n                        id=\"selectUsername\"\r\n                        select\r\n                        label=\"Select\"\r\n                        value={name}\r\n                        onChange={handleChange}\r\n                        helperText=\"Please select a username\"\r\n                    >\r\n                        {username.map((option) => (\r\n                            <MenuItem key={option} value={option}>\r\n                                {option}\r\n                            </MenuItem>\r\n                        ))}\r\n                    </TextField>\r\n                </form>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button id={'button'}\r\n                        style={{ marginRight: 100, marginTop: 20 }}\r\n                        variant=\"contained\"\r\n                        disabled={name == ''}\r\n                        onClick={() => {\r\n                            setSteps(3)\r\n                            console.log(allUsers)\r\n\r\n                        }}\r\n                    >\r\n                        Start game\r\n            </Button>\r\n                    <Button id={'button'}\r\n                        style={{ marginLeft: 100, marginTop: 20 }}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            setSteps(0)\r\n\r\n                        }}\r\n                    >\r\n                        Back\r\n            </Button>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    </>)\r\n}\r\n\r\n\r\nconst InGame = ({ points, username, difficulty, setSteps, setInMenu }) => {\r\n    setInMenu(true)\r\n    return (\r\n        <div style={{ position: \"absolute\", top: \"0\", margin: 50, width: `${window.innerWidth - window.innerWidth / 6}px` }}>\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <div>\r\n                    <Chip label={'|W|A|S|D| ← movement'} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                    <Chip label={'shift ← run'} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                    <Chip label={'space ← shoot'} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                    <Chip label={'Q ← drop coin'} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                    <Chip label={'E ← pick up item'} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                </div>\r\n                <Chip label={`Score : ${points}`} variant=\"outlined\" size={\"small\"} />\r\n                <div>\r\n                    <Chip label={`Username : ${username}`} variant=\"outlined\" size={\"small\"} style={{ marginRight: 10 }} />\r\n                    <Chip label={`Difficulty : ${difficulty}`} variant=\"outlined\" size={\"small\"} />\r\n                </div>\r\n\r\n            </Grid>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst OnLoad = ({ setSteps }) => {\r\n\r\n    return (<>\r\n        <div id={'center'} style={{ position: \"absolute\", margin: 'auto' }}>\r\n            <Paper\r\n                id={'list'}\r\n                style={{\r\n                    margin: \"auto\",\r\n                    height: 450,\r\n                    width: 800,\r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    top: \"50%\"\r\n                }}\r\n                elevation={3}\r\n            >\r\n                <Button id={'button'} variant=\"contained\" size=\"large\" color=\"primary\" style={{ margin: '50px' }}\r\n                    onClick={() => setSteps(1)}>\r\n                    New Game\r\n        </Button>\r\n                <Button id={'button'} variant=\"contained\" size=\"large\" color=\"primary\" style={{ margin: '50px' }}\r\n                    onClick={() => setSteps(5)}>\r\n                    Load Old Game\r\n        </Button>\r\n                <Button id={'button'} variant=\"contained\" size=\"large\" color=\"primary\" style={{ margin: '50px' }}\r\n                    onClick={() => setSteps(2)}>\r\n                    Options\r\n        </Button>\r\n            </Paper>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst NewGame = ({ setSteps, username, setName, reset }) => {\r\n    const {  getUserData,  allUsers, rooms, setUserData } = api.getState(state => state)\r\n    let randomNumber = Math.floor((Math.random() * 9))\r\n    let r = rooms[randomNumber].position\r\n    let p = new THREE.Vector3(r[0], 0, r[1])\r\n    console.log(p)\r\n    const createUser = () => {\r\n        const {\r\n            username,\r\n            coins,\r\n            enemyCreateIn,\r\n            treasureCreatedIn,\r\n            treasure,\r\n            points } = getUserData()\r\n        if (Object.keys(allUsers).length === 0) {\r\n            let user = {}\r\n            const userData = {\r\n                username,\r\n                coins,\r\n                enemyCreateIn,\r\n                treasureCreatedIn,\r\n                treasure,\r\n                points,\r\n                position: p\r\n            }\r\n\r\n            user[username] = userData\r\n            setUserData(user[username])\r\n            axios.post(`api/users/${JSON.stringify(user)}`)\r\n        } else {\r\n            const userData = {\r\n                username,\r\n                coins,\r\n                enemyCreateIn,\r\n                treasureCreatedIn,\r\n                treasure,\r\n                points,\r\n                position: p\r\n            }\r\n            allUsers[username] = userData\r\n            setUserData(allUsers[username])\r\n            axios.post(`api/users/${JSON.stringify(allUsers)}`)\r\n        }\r\n    }\r\n    return (<>\r\n        <div id={'center'} style={{ position: \"absolute\", margin: 'auto' }}>\r\n            <Paper\r\n                id={'list'}\r\n                style={{\r\n                    margin: \"auto\",\r\n                    height: 450,\r\n                    width: 800,\r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    top: \"50%\"\r\n                }}\r\n                elevation={3}\r\n            >\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    style={{ paddingTop: 0 }}\r\n                >\r\n                    Start a new game\r\n            </Typography>\r\n                <FormControl>\r\n                    <TextField\r\n                        // id={'button'}\r\n                        name={\"username\"}\r\n                        key={\"username\"}\r\n                        label={\"Enter your user name\"}\r\n                        style={{ margin: 50, width: 350, textAlign: \"center\" }}\r\n                        value={username}\r\n                        onChange={e => {\r\n                            setName(e.target.value);\r\n                        }}\r\n                        variant=\"outlined\"\r\n                    ></TextField>\r\n                </FormControl>\r\n                <div style={{ display: 'flex' }}>\r\n                    <Button id={'button'}\r\n                        style={{ marginRight: 100, marginTop: 20 }}\r\n                        variant=\"contained\"\r\n                        disabled={username == ''}\r\n                        onClick={() => {\r\n                            createUser()\r\n                            setSteps(3)\r\n\r\n                        }}\r\n                    >\r\n                        Start game\r\n            </Button>\r\n                    <Button id={'button'}\r\n                        style={{ marginLeft: 100, marginTop: 20 }}\r\n                        variant=\"contained\"\r\n                        onClick={() => {\r\n                            setSteps(0)\r\n\r\n                        }}\r\n                    >\r\n                        Back\r\n            </Button>\r\n                </div>\r\n            </Paper>\r\n        </div>\r\n    </>)\r\n}\r\n\r\nconst Options = ({ setSteps, difficulty, setDifficulty }) => {\r\n\r\n    const handleChange = (event) => {\r\n        setDifficulty(event.target.value);\r\n    };\r\n    return (<>\r\n\r\n        <div id={'center'} style={{ position: \"absolute\", margin: 'auto' }}>\r\n            <Paper\r\n\r\n                id={'list'}\r\n                style={{\r\n                    margin: \"auto\",\r\n                    height: 450,\r\n                    width: 800,\r\n                    textAlign: \"center\",\r\n                    position: \"absolute\",\r\n                    top: \"50%\"\r\n                }}\r\n                elevation={3}\r\n            >\r\n                <Typography\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                    style={{ paddingTop: 0 }}\r\n                >\r\n                    Options\r\n            </Typography>\r\n\r\n                <FormControl component=\"fieldset\">\r\n                    <RadioGroup aria-label=\"op\" name=\"op\" value={difficulty} onChange={handleChange}>\r\n                        {/* Use config file to set the values here */}\r\n                        <FormControlLabel value=\"Hard\" control={<Radio />} label=\"Hard\" />\r\n                        <FormControlLabel value=\"Normal\" control={<Radio />} label=\"Normal\" />\r\n                        <FormControlLabel value=\"Easy\" control={<Radio />} label=\"Easy\" />\r\n\r\n                    </RadioGroup>\r\n                </FormControl>\r\n\r\n                <Button id={'button'}\r\n                    style={{ marginTop: 50 }}\r\n                    variant=\"contained\"\r\n\r\n                    onClick={() => setSteps(0)}\r\n                    value=\"Sign In!\"\r\n                >\r\n                    Go back\r\n            </Button>\r\n            </Paper>\r\n        </div>\r\n    </>)\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Maze.js",[],"C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Player.js",["175"],"\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport { useFrame, useThree } from 'react-three-fiber'\r\nimport { useSphere } from 'use-cannon'\r\nimport * as THREE from \"three\"\r\nimport { api } from '../Store'\r\nimport Coin from './Coins'\r\nimport Enemy from './Enemy'\r\nimport Treasure from './Treasure'\r\n\r\nconst keys = { KeyW: \"forward\", KeyS: \"backward\", KeyA: \"left\", KeyD: \"right\", ShiftLeft: \"run\", Space: 'shoot', KeyE: \"pickUp\", KeyQ: \"dropDown\" }\r\nconst moveFieldByKey = (key) => keys[key]\r\n\r\nconst zVector = new THREE.Vector3()\r\nconst xVector = new THREE.Vector3()\r\nconst boxDirection = new THREE.Vector3()\r\n\r\nconst usePlayerControls = () => {\r\n  const [movement, setMovement] = useState({ forward: false, backward: false, left: false, right: false, jump: false, run: false, shoot: false, pickUp: false, dropDown: false })\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: true }))\r\n    const handleKeyUp = (e) => setMovement((m) => ({ ...m, [moveFieldByKey(e.code)]: false }))\r\n    document.addEventListener(\"keydown\", handleKeyDown)\r\n    document.addEventListener(\"keyup\", handleKeyUp)\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown)\r\n      document.removeEventListener(\"keyup\", handleKeyUp)\r\n    }\r\n  }, [])\r\n  return movement\r\n}\r\n\r\nconst inRoom = (room, p) => {\r\n  const { x, z } = room\r\n  const range = 180\r\n  if ((p.x < x + range && p.x > x - range) && (p.z < z + range && p.z > z - range)) {\r\n    return true\r\n  }\r\n  return false\r\n}\r\n\r\nexport default function Player({ args = [5, 25, 5] }) {\r\n  const { setPosition, position, setRotation, actions, setDrop, setPickUp, points, config,difficulty } = api.getState(state => state)\r\n  const { camera } = useThree()\r\n  const [ref, apiPlayer] = useSphere(() => ({ mass: 60, type: \"Dynamic\", args: 13, position: [position.x, position.y, position.z] }))\r\n  const controls = usePlayerControls()\r\n  const { forward, backward, left, right, run, shoot, dropDown, pickUp } = controls\r\n  let cancelLaserTO = undefined\r\n  const refLight = useRef()\r\n\r\n  useFrame(state => {\r\n    if (shoot) {\r\n      clearTimeout(cancelLaserTO)\r\n      cancelLaserTO = setTimeout(() => actions.shoot(), 10)\r\n    }\r\n    if (dropDown && points >= 20) {\r\n      clearTimeout(cancelLaserTO)\r\n      cancelLaserTO = setTimeout(() => new Coin().addCoin(ref.current.position), 100)\r\n    }\r\n\r\n    setPosition(ref.current.position)\r\n    setRotation(ref.current.rotation)\r\n    setDrop(dropDown)\r\n    setPickUp(pickUp)\r\n\r\n    // player controls\r\n    const speed = run ? 50 -config[difficulty] : 20\r\n    const offsetAng = new THREE.Vector3(0, (Math.sin(state.clock.elapsedTime * speed / 5) * 1.1) + 10, 0)\r\n    camera.position.copy(position).add(offsetAng)\r\n    apiPlayer.rotation.set(0, camera.rotation.y, 0)\r\n    refLight.current.rotation.set(0, -camera.rotation.x, 0)\r\n    // refLight.current.position.set(position.x,position.y,position.z)\r\n    zVector.set(0, 0, Number(backward) - Number(forward))\r\n    xVector.set(Number(right) - Number(left), 0, 0)\r\n    boxDirection.addVectors(zVector, xVector).normalize().multiplyScalar(5)// this direction is more to movement \r\n\r\n    const movement = new THREE.Vector3(0, 0, 0).lerp(boxDirection, speed)\r\n\r\n    //update player controls based on direction of the camera rotation \r\n    const forwardVector = new THREE.Vector3().copy(camera.getWorldDirection(new THREE.Vector3()))\r\n    forwardVector.y = 0\r\n    forwardVector.normalize()\r\n    const vectorUp = new THREE.Vector3(0, 1, 0)\r\n    const sideVector = vectorUp.cross(forwardVector)\r\n    const velVector = forwardVector.multiplyScalar(movement.z).add(sideVector.multiplyScalar(movement.x))\r\n    apiPlayer.velocity.set(-velVector.x, 0, -velVector.z)\r\n\r\n    api.getState().rooms.forEach(room => {\r\n      if (inRoom(room, api.getState().position)) {\r\n        if (room.name == 'end') {\r\n          setTimeout(() => {\r\n            api.getState().setSteps(6)\r\n          }, 1000);\r\n        }\r\n        if (api.getState().Enemy.length === 0 && api.getState().enemyCreateIn.indexOf(room.name) === -1 && room.hasEnemy) {\r\n          api.getState().addEnemyCreateIn(room.name)\r\n          setTimeout(() => {\r\n            // bring it back to match the fps of the screen \r\n            new Enemy(room).addEnemy()\r\n            api.getState().closeDoors()\r\n          }, 350);\r\n        }\r\n        if (api.getState().treasure.length === 0 && api.getState().treasureCreatedIn.indexOf(room.name) === -1 && room.hasTreasure) {\r\n          api.getState().addTreasureCreatedIn(room.name)\r\n          new Treasure(room).addTreasure()\r\n        }\r\n      }\r\n    })\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <mesh ref={ref} castShadow  >\r\n        <pointLight ref={refLight} intensity={0.9} distance={200} decay={5} />\r\n        {/* add model */}\r\n      </mesh>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Coins.js",["176"],"import React, { useEffect, useRef } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { api } from '../Store'\r\n\r\n\r\n\r\n\r\n\r\nfunction ACoin({ args = [2, 2, 1, 32, 32], p, id }) {\r\n\r\n    const { position, coins, setCoin } = api.getState(state => state)\r\n    const ref = useRef()\r\n\r\n\r\n    useEffect(() => {\r\n        ref.current.position.set(p.x, 3, p.z)\r\n        coins[coins.length - 1].p = ref.current.position\r\n        setCoin(coins)\r\n    }, [])\r\n\r\n    useFrame(state => {\r\n        // console.log(api.getState().points)\r\n\r\n        ref.current.rotation.set(Math.PI / 2, 0, state.clock.elapsedTime * Math.PI / 2)\r\n\r\n        const coin = ref.current.position\r\n        const playerPos = position\r\n        const deltaX = playerPos.x - coin.x\r\n        const deltaZ = playerPos.z - coin.z\r\n        let distance = Math.sqrt((deltaX * deltaX) + (deltaZ * deltaZ))\r\n\r\n        if (api.getState().pickUp && distance < 20) {\r\n\r\n            console.log(\"pick up Coin and remove from store\", id)\r\n            api.getState().removeCoin(id)\r\n\r\n            console.log(\"pick up Coin and remove from store\", api.getState().coins)\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <mesh ref={ref} >\r\n                <pointLight intensity={1} distance={5} decay={1.5} />\r\n                <cylinderBufferGeometry args={args} />\r\n                <meshStandardMaterial color={'gold'} roughness={0} />\r\n            </mesh>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default function Coin() { }\r\n\r\nCoin.prototype.addCoin = function (p) {\r\n    const id = Math.random()\r\n\r\n    api.getState().addCoin(\r\n        { p, id }\r\n    )\r\n\r\n}\r\n\r\nCoin.prototype.makeCoin = function (p, id) {\r\n\r\n    return (\r\n        <React.Fragment key={id}>\r\n            <ACoin key={id + 'coinObj'} p={p} id={id} />\r\n        </React.Fragment >\r\n    )\r\n\r\n}\r\n\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Room.js",["177","178","179","180","181","182","183","184","185"],"import React, { useState } from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport * as THREE from \"three\"\r\nimport { useBox, usePlane } from 'use-cannon'\r\nimport { api } from '../Store'\r\nimport Passage from './Passage'\r\n\r\nimport { useSpring } from \"@react-spring/core\";\r\nimport { a } from \"@react-spring/three\";\r\n\r\nconst Ground = ({ x, z, name }) => {\r\n    const [ref] = usePlane(() => ({ type: \"Static\", position: [x, 0, z], rotation: [-Math.PI / 2, 0, 0], args: [400, 400] }))\r\n    return (\r\n        <mesh ref={ref} receiveShadow>\r\n            <planeBufferGeometry attach=\"geometry\" args={[400, 400]} />\r\n            <meshStandardMaterial color={'orange'} />\r\n        </mesh>\r\n    )\r\n}\r\n\r\nconst Roof = ({ x, z, color }) => {\r\n    return (\r\n        <mesh receiveShadow position={[0 + x, 150, 0 + z]} rotation={[-Math.PI / 2, 0, 0]} >\r\n            <rectAreaLight intensity={.3} width={400} height={400} />\r\n            <boxBufferGeometry attach=\"geometry\" args={[400, 400, 5]} />\r\n            <meshStandardMaterial color={color} />\r\n        </mesh>\r\n    )\r\n}\r\n\r\nconst Wall = ({ x, z, r, color }) => { return (<Brick rotation={[0, r, 0]} position={[0 + x, 75, 0 + z]} size={[400, 150, 20]} color={color} />) }\r\n\r\nconst WallWithDoor = ({ x, z, r, color }) => {\r\n    return (\r\n        <>\r\n            <Brick rotation={[0, r, 0]} position={[112.5 + x, 75, 0 + z]} size={[175, 150, 20]} color={color} />\r\n            <Brick rotation={[0, r, 0]} position={[0 + x, 100, 0 + z]} size={[50, 100, 20]} color={color} />\r\n            <Brick rotation={[0, r, 0]} position={[-112.5 + x, 75, 0 + z]} size={[175, 150, 20]} color={color} />\r\n            <Door rotation={[0, 0, 0]} position={[0 + x, 25, 0 + z]} size={[50, 50, 15]} type=\"normal\" color={color} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst SideWall = ({ x, z, r, color }) => { return (<Brick rotation={[0, r, 0]} position={[z, 75, 0 + x]} size={[400, 150, 20]} color={color} />) }\r\n\r\nconst SideWallWithDoor = ({ x, z, r, color }) => {\r\n    return (\r\n        <>\r\n            <Brick rotation={[0, r, 0]} position={[z, 75, 112.5 + x]} size={[175, 150, 20]} color={color} />\r\n            <Brick rotation={[0, r, 0]} position={[z, 100, 0 + x]} size={[50, 100, 20]} color={color} />\r\n            <Brick rotation={[0, r, 0]} position={[z, 75, -112.5 + x]} size={[175, 150, 20]} color={color} />\r\n            <Door rotation={[0, r, 0]} position={[0 + z, 25, 0 + x]} size={[50, 50, 15]} type=\"side\" color={color} />\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst Brick = (props) => {\r\n    const { rotation, position, size, color } = props\r\n    const [ref] = useBox(() => ({ mass: 100, type: \"Static\", rotation, position, args: size }))\r\n    return (\r\n        <mesh ref={ref}>\r\n            <boxBufferGeometry attach=\"geometry\" args={size} />\r\n            <meshStandardMaterial color={color} />\r\n        </mesh>\r\n    )\r\n}\r\n\r\n\r\nconst Door = (props) => {\r\n    const { rotation, position, size, type } = props\r\n    const [ref, apiDoor] = useBox(() => ({ mass: 100, type: \"Static\", rotation, position, args: size }))\r\n    const [active, setActive] = useState(false);\r\n    const { spring } = useSpring({\r\n        spring: active,\r\n        config: { mass: 5, tension: 200, friction: 50 },\r\n    });\r\n    const color = spring.to([0, 1], [\"#e45858\", \"orange\"]);\r\n\r\n    useFrame(() => {\r\n        let deltaX = position[0] - api.getState().position.x\r\n        let deltaZ = position[2] - api.getState().position.z\r\n        let distance = Math.sqrt((deltaX * deltaX) + (deltaZ * deltaZ))\r\n\r\n        setActive(api.getState().doorsOpened)\r\n        if (api.getState().doorsOpened) {\r\n            if (type === \"side\") {\r\n                const z = distance < 50 ? new THREE.Vector3(0, 0, position[2] + 80) : new THREE.Vector3(0, 0, position[2])\r\n                const movement = new THREE.Vector3(0, 0, position[2]).lerp(z, 0.65)\r\n                apiDoor.position.set(position[0], position[1], movement.z)\r\n            }\r\n            if (type === \"normal\") {\r\n                const x = distance < 50 ? new THREE.Vector3(position[0] + 80, 0, 0) : new THREE.Vector3(position[0], 0, 0)\r\n                const movement = new THREE.Vector3(position[0], 0, 0).lerp(x, 0.65)\r\n                apiDoor.position.set(movement.x, position[1], position[2])\r\n            }\r\n        }\r\n    }\r\n    )\r\n    return (\r\n        <a.mesh ref={ref}>\r\n            <boxBufferGeometry attach=\"geometry\" args={size} />\r\n            <a.meshStandardMaterial roughness={0.5} color={color} />\r\n        </a.mesh>\r\n    )\r\n}\r\n\r\n\r\nexport default function CreateRoom(doors, x, z, name, hasEnemy = true, hasTreasure = false) {\r\n    this.doors = doors\r\n    this.x = x * 200\r\n    this.z = z * 200\r\n    this.position = [x * 200, z * 200]\r\n    this.name = name\r\n    this.hasEnemy = hasEnemy\r\n    this.hasTreasure = hasTreasure\r\n}\r\nCreateRoom.prototype.selfConnect = function (d1, d2) {\r\n    const pass = new Passage(this.room, null, null, null)\r\n    const proxy = new CreateRoom(this.doors, this.x / 200, this.z / 200, this.name)\r\n    pass.selfConnect(proxy, d1, d2)\r\n}\r\nCreateRoom.prototype.create = function () {\r\n    console.log(this.name + ' is created')\r\n    const northWall = this.doors[0] ? <WallWithDoor key={'northWall'} x={this.x} z={-190 + this.z} r={0} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} /> : <Wall key={'northWall'} x={this.x} z={-190 + this.z} r={0} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} />\r\n    const eastWall = this.doors[1] ? <SideWallWithDoor key={'eastWall'} x={this.z} z={190 + this.x} r={Math.PI / 2} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} /> : <SideWall key={'eastWall'} x={this.z} z={190 + this.x} r={Math.PI / 2} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} />\r\n    const southWall = this.doors[2] ? <WallWithDoor key={'southWall'} x={this.x} z={190 + this.z} r={0} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} /> : <Wall key={'southWall'} x={this.x} z={190 + this.z} r={0} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} />\r\n    const westWall = this.doors[3] ? <SideWallWithDoor key={'westWall'} x={this.z} z={-190 + this.x} r={Math.PI / 2} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} /> : <SideWall key={'westWall'} x={this.z} z={-190 + this.x} r={Math.PI / 2} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} />\r\n    const walls = [northWall, eastWall, southWall, westWall]\r\n\r\n    this.room = <React.Fragment key={this.name}>\r\n        <Ground x={this.x} z={this.z} name={this.name}></Ground>\r\n        <Roof x={this.x} z={this.z} color={this.name != 'end' ? 'lightblue' : 'darkgreen'} />\r\n        {walls.map(item => item)}\r\n    </React.Fragment >\r\n    return this.room\r\n}\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Passage.js",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202"],"C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Treasure.js",["203"],"import React from 'react'\r\nimport { useFrame } from 'react-three-fiber'\r\nimport { useBox } from 'use-cannon'\r\nimport { api } from '../Store'\r\n\r\nlet plusOrMinus = Math.random() < 0.5 ? -1 : 1;\r\nconst randomX = Math.floor(Math.random() * 150)*plusOrMinus \r\nconst randomZ = Math.floor(Math.random() * 150)*plusOrMinus \r\n\r\nfunction Box({ args = [9, 5, 8], color = \"silver\", room }) {\r\n\r\n    const { position,treasure,setTreasure ,addTreasurePickUp} = api.getState(state => state)\r\n\r\n    console.log(position, room)\r\n    const [ref, apiBox] = useBox(() => ({\r\n        mass: 6, type: \"Dynamic\", args: args, \r\n        position: [room.x,, 15, room.z ]\r\n    }))\r\n\r\n    useFrame(state => {\r\n\r\n        ref.current.position.set(room.x+randomX, (Math.sin(state.clock.elapsedTime * 5) * 1) + 20, room.z+randomZ)\r\n        apiBox.rotation.set(0, 0, 0)\r\n     \r\n\r\n        const Treasure = ref.current.position\r\n        const playerPos = position\r\n        const deltaX = playerPos.x - Treasure.x\r\n        const deltaZ = playerPos.z - Treasure.z\r\n        let distance = Math.sqrt((deltaX * deltaX) + (deltaZ * deltaZ))\r\n        // need to add a E press down and distance to pick up the treasure \r\n        if(api.getState().pickUp && distance< 30){\r\n            \r\n            treasure.pop()\r\n            setTreasure(treasure)\r\n            addTreasurePickUp(room.name)\r\n            console.log(\"pick up treasure and remove from store\")\r\n        }\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <mesh ref={ref} >\r\n          <pointLight intensity={30} distance={25} color={\"silver\"} decay={2}/>\r\n                <boxBufferGeometry args={args} />\r\n                <meshStandardMaterial color={color} roughness={0} />\r\n            </mesh>\r\n        </>\r\n    )\r\n}\r\nexport default function Treasure(room) {\r\n    this.room = room\r\n}\r\n\r\nTreasure.prototype.addTreasure = function () {\r\n    console.log(\"adding t\", this.room.x)\r\n    api.getState().addTreasure(\r\n        <React.Fragment key={this.room.name + 'Treasure'}>\r\n            <Box key={this.room.name + 'TreasureObj'} room={this.room} />\r\n        </React.Fragment >\r\n    )\r\n\r\n}\r\n\r\n\r\n\r\n\r\n// export default function Room(doors,x,z) {\r\n//     return new CreateRoom(doors, x, z)\r\n// }\r\n","C:\\Users\\Al-Safwan\\Desktop\\App\\client\\src\\Components\\Enemy.js",[],{"ruleId":"204","severity":1,"message":"205","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":25},{"ruleId":"204","severity":1,"message":"208","line":2,"column":50,"nodeType":"206","messageId":"207","endLine":2,"endColumn":59},{"ruleId":"204","severity":1,"message":"209","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":12},{"ruleId":"210","severity":1,"message":"211","line":15,"column":5,"nodeType":"212","messageId":"213","endLine":32,"endColumn":6},{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":30,"column":6,"nodeType":"220","endLine":30,"endColumn":19,"suggestions":"221"},{"ruleId":"218","severity":1,"message":"222","line":41,"column":6,"nodeType":"220","endLine":41,"endColumn":8,"suggestions":"223"},{"ruleId":"218","severity":1,"message":"224","line":123,"column":6,"nodeType":"220","endLine":123,"endColumn":14,"suggestions":"225"},{"ruleId":"226","severity":1,"message":"227","line":68,"column":58,"nodeType":"228","messageId":"229","endLine":68,"endColumn":60},{"ruleId":"226","severity":1,"message":"230","line":90,"column":23,"nodeType":"228","messageId":"229","endLine":90,"endColumn":25},{"ruleId":"226","severity":1,"message":"230","line":117,"column":40,"nodeType":"228","messageId":"229","endLine":117,"endColumn":42},{"ruleId":"226","severity":1,"message":"230","line":289,"column":44,"nodeType":"228","messageId":"229","endLine":289,"endColumn":46},{"ruleId":"231","severity":1,"message":"232","line":17,"column":19,"nodeType":"220","messageId":"233","endLine":17,"endColumn":41},{"ruleId":"218","severity":1,"message":"234","line":19,"column":8,"nodeType":"220","endLine":19,"endColumn":10,"suggestions":"235"},{"ruleId":"226","severity":1,"message":"227","line":126,"column":123,"nodeType":"228","messageId":"229","endLine":126,"endColumn":125},{"ruleId":"226","severity":1,"message":"227","line":126,"column":242,"nodeType":"228","messageId":"229","endLine":126,"endColumn":244},{"ruleId":"226","severity":1,"message":"227","line":127,"column":134,"nodeType":"228","messageId":"229","endLine":127,"endColumn":136},{"ruleId":"226","severity":1,"message":"227","line":127,"column":265,"nodeType":"228","messageId":"229","endLine":127,"endColumn":267},{"ruleId":"226","severity":1,"message":"227","line":128,"column":122,"nodeType":"228","messageId":"229","endLine":128,"endColumn":124},{"ruleId":"226","severity":1,"message":"227","line":128,"column":240,"nodeType":"228","messageId":"229","endLine":128,"endColumn":242},{"ruleId":"226","severity":1,"message":"227","line":129,"column":135,"nodeType":"228","messageId":"229","endLine":129,"endColumn":137},{"ruleId":"226","severity":1,"message":"227","line":129,"column":267,"nodeType":"228","messageId":"229","endLine":129,"endColumn":269},{"ruleId":"226","severity":1,"message":"227","line":134,"column":54,"nodeType":"228","messageId":"229","endLine":134,"endColumn":56},{"ruleId":"204","severity":1,"message":"236","line":7,"column":39,"nodeType":"206","messageId":"207","endLine":7,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":271,"column":20,"nodeType":"239","messageId":"240","endLine":271,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":271,"column":34,"nodeType":"239","messageId":"240","endLine":271,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":271,"column":34,"nodeType":"239","messageId":"240","endLine":271,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":271,"column":48,"nodeType":"239","messageId":"240","endLine":271,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":276,"column":20,"nodeType":"239","messageId":"240","endLine":276,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":276,"column":34,"nodeType":"239","messageId":"240","endLine":276,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":276,"column":34,"nodeType":"239","messageId":"240","endLine":276,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":276,"column":48,"nodeType":"239","messageId":"240","endLine":276,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":281,"column":20,"nodeType":"239","messageId":"240","endLine":281,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":281,"column":34,"nodeType":"239","messageId":"240","endLine":281,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":281,"column":34,"nodeType":"239","messageId":"240","endLine":281,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":281,"column":48,"nodeType":"239","messageId":"240","endLine":281,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":286,"column":20,"nodeType":"239","messageId":"240","endLine":286,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":286,"column":34,"nodeType":"239","messageId":"240","endLine":286,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":286,"column":34,"nodeType":"239","messageId":"240","endLine":286,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":286,"column":48,"nodeType":"239","messageId":"240","endLine":286,"endColumn":50},{"ruleId":"242","severity":1,"message":"243","line":25,"column":31,"nodeType":"244","messageId":"245","endLine":25,"endColumn":32},{"ruleId":"214","replacedBy":"246"},{"ruleId":"216","replacedBy":"247"},{"ruleId":"218","severity":1,"message":"219","line":30,"column":6,"nodeType":"220","endLine":30,"endColumn":19,"suggestions":"248"},{"ruleId":"218","severity":1,"message":"222","line":41,"column":6,"nodeType":"220","endLine":41,"endColumn":8,"suggestions":"249"},{"ruleId":"218","severity":1,"message":"224","line":123,"column":6,"nodeType":"220","endLine":123,"endColumn":14,"suggestions":"250"},{"ruleId":"226","severity":1,"message":"227","line":68,"column":58,"nodeType":"228","messageId":"229","endLine":68,"endColumn":60},{"ruleId":"242","severity":1,"message":"243","line":25,"column":31,"nodeType":"244","messageId":"245","endLine":25,"endColumn":32},{"ruleId":"226","severity":1,"message":"230","line":117,"column":40,"nodeType":"228","messageId":"229","endLine":117,"endColumn":42},{"ruleId":"226","severity":1,"message":"230","line":289,"column":44,"nodeType":"228","messageId":"229","endLine":289,"endColumn":46},{"ruleId":"226","severity":1,"message":"230","line":90,"column":23,"nodeType":"228","messageId":"229","endLine":90,"endColumn":25},{"ruleId":"218","severity":1,"message":"234","line":19,"column":8,"nodeType":"220","endLine":19,"endColumn":10,"suggestions":"251"},{"ruleId":"226","severity":1,"message":"227","line":126,"column":123,"nodeType":"228","messageId":"229","endLine":126,"endColumn":125},{"ruleId":"226","severity":1,"message":"227","line":126,"column":242,"nodeType":"228","messageId":"229","endLine":126,"endColumn":244},{"ruleId":"226","severity":1,"message":"227","line":127,"column":134,"nodeType":"228","messageId":"229","endLine":127,"endColumn":136},{"ruleId":"226","severity":1,"message":"227","line":127,"column":265,"nodeType":"228","messageId":"229","endLine":127,"endColumn":267},{"ruleId":"226","severity":1,"message":"227","line":128,"column":122,"nodeType":"228","messageId":"229","endLine":128,"endColumn":124},{"ruleId":"226","severity":1,"message":"227","line":128,"column":240,"nodeType":"228","messageId":"229","endLine":128,"endColumn":242},{"ruleId":"226","severity":1,"message":"227","line":129,"column":135,"nodeType":"228","messageId":"229","endLine":129,"endColumn":137},{"ruleId":"226","severity":1,"message":"227","line":129,"column":267,"nodeType":"228","messageId":"229","endLine":129,"endColumn":269},{"ruleId":"226","severity":1,"message":"227","line":134,"column":54,"nodeType":"228","messageId":"229","endLine":134,"endColumn":56},{"ruleId":"204","severity":1,"message":"236","line":7,"column":39,"nodeType":"206","messageId":"207","endLine":7,"endColumn":44},{"ruleId":"237","severity":1,"message":"238","line":271,"column":20,"nodeType":"239","messageId":"240","endLine":271,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":271,"column":34,"nodeType":"239","messageId":"240","endLine":271,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":271,"column":34,"nodeType":"239","messageId":"240","endLine":271,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":271,"column":48,"nodeType":"239","messageId":"240","endLine":271,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":276,"column":20,"nodeType":"239","messageId":"240","endLine":276,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":276,"column":34,"nodeType":"239","messageId":"240","endLine":276,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":276,"column":34,"nodeType":"239","messageId":"240","endLine":276,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":276,"column":48,"nodeType":"239","messageId":"240","endLine":276,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":281,"column":20,"nodeType":"239","messageId":"240","endLine":281,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":281,"column":34,"nodeType":"239","messageId":"240","endLine":281,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":281,"column":34,"nodeType":"239","messageId":"240","endLine":281,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":281,"column":48,"nodeType":"239","messageId":"240","endLine":281,"endColumn":50},{"ruleId":"237","severity":1,"message":"238","line":286,"column":20,"nodeType":"239","messageId":"240","endLine":286,"endColumn":22},{"ruleId":"237","severity":1,"message":"238","line":286,"column":34,"nodeType":"239","messageId":"240","endLine":286,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":286,"column":34,"nodeType":"239","messageId":"240","endLine":286,"endColumn":36},{"ruleId":"237","severity":1,"message":"241","line":286,"column":48,"nodeType":"239","messageId":"240","endLine":286,"endColumn":50},{"ruleId":"231","severity":1,"message":"232","line":17,"column":19,"nodeType":"220","messageId":"233","endLine":17,"endColumn":41},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'FormLabel' is defined but never used.","'Game' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-native-reassign",["252"],"no-negated-in-lhs",["253"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setConfig'. Either include it or remove the dependency array.","ArrayExpression",["254"],"React Hook useEffect has missing dependencies: 'camera', 'position.x', and 'position.z'. Either include them or remove the dependency array.",["255"],"React Hook useEffect has a missing dependency: 'actions'. Either include it or remove the dependency array.",["256"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has missing dependencies: 'coins', 'p.x', 'p.z', and 'setCoin'. Either include them or remove the dependency array.",["257"],"'color' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["252"],["253"],["258"],["259"],["260"],["261"],"no-global-assign","no-unsafe-negation",{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"268","fix":"269"},{"desc":"262","fix":"270"},{"desc":"264","fix":"271"},{"desc":"266","fix":"272"},{"desc":"268","fix":"273"},"Update the dependencies array to be: [setAllUsers, setConfig]",{"range":"274","text":"275"},"Update the dependencies array to be: [camera, position.x, position.z]",{"range":"276","text":"277"},"Update the dependencies array to be: [actions, points]",{"range":"278","text":"279"},"Update the dependencies array to be: [coins, p.x, p.z, setCoin]",{"range":"280","text":"281"},{"range":"282","text":"275"},{"range":"283","text":"277"},{"range":"284","text":"279"},{"range":"285","text":"281"},[794,807],"[setAllUsers, setConfig]",[1422,1424],"[camera, position.x, position.z]",[3111,3119],"[actions, points]",[455,457],"[coins, p.x, p.z, setCoin]",[794,807],[1422,1424],[3111,3119],[455,457]]